<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ADMTableEvents</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class ADMTableEvents
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>SecurityUserRole_onInserted</Name>
				<Source><![CDATA[
    [DataEventHandler(tableStr(SecurityUserRole), DataEventType::Inserted)]
    public static void SecurityUserRole_onInserted(Common sender, DataEventArgs e)
    {        
        SecurityRole sr;

        SecurityUserRole    sur = sender as SecurityUserRole;
        ADMSysAdminLog      sal;
        boolean             dialogClosedOk;
        
        select RecId from sr where sr.AotName == "-SYSADMIN-";
        if(sr)
        {
            if(sur.SecurityRole == sr.RecID)
            {
                sal.Action = ADMSysAdminAction::Assigned;
                sal.UserId_ = sur.User;

                if (AdmSysAdminLogHelper::CheckReasonDialogConfig()
                    || AdmSysAdminLogHelper::CheckExpiryDateDialog())
                {
                    if(xGlobal::hasClient())
                    {
                        Args args = new Args(formStr(ADMSysAdminReason));
                        args.record(sal);

                        FormRun fr = new FormRun(args);
                        fr.init();
                        fr.run();
                        fr.wait();

                        if (sal.Reason || (!AdmSysAdminLogHelper::CheckReasonDialogConfig() && AdmSysAdminLogHelper::CheckExpiryDateDialog()))
                        {
                            dialogClosedOk = true;
                        }
                        else
                        {
                            throw error("@D365FOAdminToolkit:EmptyReason");
                        }
                    }
                }
                else
                {
                    dialogClosedOk = true;
                }
                        
                if (dialogClosedOk)
                {
                    sal.insert();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>SecurityUserRole_onUpdating</Name>
				<Source><![CDATA[
    [DataEventHandler(tableStr(SecurityUserRole), DataEventType::Updating)]
    public static void SecurityUserRole_onUpdating(Common sender, DataEventArgs e)
    {
        SecurityRole sr;
        FormDataSource fds = sender.dataSource();
        SecurityUserRole sur = sender as SecurityUserRole;
        ADMSysAdminLog sal;
        int reasonDialog = 0;
        boolean dialogClosedOk;

        select RecId from sr where sr.AotName == "-SYSADMIN-";
        if(sr)
        {
            if(sur.SecurityRole == sr.RecID)
            {
                if(sur.AssignmentStatus == RoleAssignmentStatus::Enabled)
                {
                    sal.Action = ADMSysAdminAction::Assigned;
                    sal.UserId_ = sur.User;

                    if (AdmSysAdminLogHelper::CheckReasonDialogConfig()
                        || AdmSysAdminLogHelper::CheckExpiryDateDialog())
                    {
                        if(xGlobal::hasClient())
                        {
                            Args args = new Args(formStr(ADMSysAdminReason));
                            args.record(sal);

                            FormRun fr = new FormRun(args);
                            fr.init();
                            fr.run();
                            fr.wait();

                            if (sal.Reason || (!AdmSysAdminLogHelper::CheckReasonDialogConfig() && AdmSysAdminLogHelper::CheckExpiryDateDialog()))
                            {
                                dialogClosedOk = true;
                            }
                            else
                            {
                                throw error("@D365FOAdminToolkit:EmptyReason");
                            }
                        }
                    }
                    else
                    {
                        dialogClosedOk = true;
                    }
                        
                    if (dialogClosedOk)
                    {
                        sal.insert();
                    }
                }
                else if(sur.AssignmentStatus == RoleAssignmentStatus::Disabled)
                {
                    ADMSysAdminLogHelper::setUserRoleAssignmentAsExpired(sur.User);

                    sal.Action = ADMSysAdminAction::Revoked;
                    sal.UserId_ = sur.User;
                    sal.Reason = "";
                    sal.insert();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>SecurityUserRole_onDeleted</Name>
				<Source><![CDATA[
    [DataEventHandler(tableStr(SecurityUserRole), DataEventType::Deleted)]
    public static void SecurityUserRole_onDeleted(Common sender, DataEventArgs e)
    {
        SecurityRole sr;
        FormDataSource fds = sender.orig().dataSource();
        SecurityUserRole sur = sender as SecurityUserRole;
        ADMSysAdminLog sal;

        select RecId from sr where sr.AotName == "-SYSADMIN-";
        if(sr)
        {
            if(sur)
            {
                if(sur.SecurityRole == sr.RecID)
                {
                    ADMSysAdminLogHelper::setUserRoleAssignmentAsExpired(sur.User);

                    sal.Action = ADMSysAdminAction::Revoked;
                    sal.UserId_ = sur.User;
                    sal.Reason = "";
                    sal.insert();
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>